plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.0'
    karateVersion = '1.4.1'
    lombokVersion = '1.18.30'
    jacksonVersion = '2.16.0-rc1'
    slf4jVersion = '2.0.9'
    restassuredVersion = '5.5.0'
    assertJVersion = '3.26.3'
}

dependencies {
    implementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "com.intuit.karate:karate-core:${karateVersion}"
    implementation "com.intuit.karate:karate-junit5:${karateVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "io.rest-assured:rest-assured:${restassuredVersion}"
    implementation "org.assertj:assertj-core:${assertJVersion}"
    implementation 'org.apache.commons:commons-lang3:3.17.0'
}

// to run tests in TestRunner sourceSets have to be set
sourceSets {
    test {
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}

test {
    useJUnitPlatform()
    systemProperty "karate.env", System.properties.getProperty("karate.env")
}


tasks.register('karate', JavaExec) {
    group = 'karate tasks'
    description = 'allows running karate tests'

    mainClass = 'com.intuit.karate.Main'
    classpath = sourceSets.test.runtimeClasspath

    if (project.hasProperty('tags')) {
        args = ['src/test/java', '--tags', project.tags]
    } else {
        args = ['src/test/java']
    }

    args += [
            '--output', 'build/karate_reports_from_karate_task',
            '--hook', 'org.example.RuntimeHook.CustomRuntimeHook',
            'src/test/java'
    ]

    // allows switching between environments
    systemProperty "karate.env", System.properties.getProperty("karate.env")

    // this allows running tests in parallel mode
    systemProperty "karate.options", System.properties.getProperty("karate.options")

    // karate task will be executed as success even when tests fail
    // ignoreExitValue = true as JavaExecSpec
}
